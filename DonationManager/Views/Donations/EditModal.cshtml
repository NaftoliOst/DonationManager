@model DonationManager.Models.Donation
    @{ 
            AjaxOptions ajaxDeleteModal = new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "DeleteModalBody"
        };
    }

<div>

    @using (Html.BeginForm("edit", "donations", Model.ID, FormMethod.Post, htmlAttributes: new { id = "editor" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(Model => Model.CharityID)
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CharityID, "To", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("CharityID", null, htmlAttributes: new { @class = "form-control", disabled = true })
                @Html.ValidationMessageFor(model => model.CharityID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                <input class="form-control text-box single-line input-validation-error" value="@Model.Date.ToString("yyyy-MM-dd")"
                       data-val="true" data-val-date="The field Date must be a date." data-val-required="The Date field is required."
                       id="Date" name="Date" type="date" aria-describedby="Date-error" aria-invalid="true">
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text">£</span>
                    </div>
                    <input type="text" required onchange="updateAmount()" name="Amount" id="Amount" class="form-control" value="@Model.Amount"
                           onkeypress="return (event.charCode !=8 && event.charCode ==0 || ( event.charCode == 46 || (event.charCode >= 48 && event.charCode <= 57)))" />
                </div>
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Method, htmlAttributes: new { @class = "control-label" })
                <select name="Method" id="Method" class="form-control" required>
                    <option hidden disabled value=null> -- Please Select --</option>
                    <option id="Card" value="Card">Card</option>
                    <option id="Bank Transfer" value="Bank Transfer">Bank Transfer</option>
                    <option id="Charity Voucher" value="Charity Voucher">Charity Voucher</option>
                    <option id="Charity Transfer" value="Charity Transfer">Charity Transfer</option>
                    <option id="Cheque" value="Cheque">Cheque</option>
                    <option id="Cash" value="Cash">Cash</option>
                    <option id="Other" value="Other">Other</option>
                </select>
                @Html.ValidationMessageFor(model => model.Method, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label" })
                <textarea name="Note" id="Note" class="form-control" rows="3" placeholder="Any notes to your future self about this donation...">@Model.Note</textarea>
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-secondary">Discard Changes</button>
            <input type="submit" id="Save" value="Save Changes" class="btn btn-primary" disabled />


        </div>
    }
<div class="modal-footer">
    @using (Ajax.BeginForm("OpenDeleteModal", ajaxDeleteModal))
    {
        <input type="text" value="@Model.ID" hidden readonly name="id" />
        <button type="submit" class="btn btn-danger" data-target="#DeleteModal" data-toggle="modal">
            Delete Donation
        </button>
    }
</div>

    <script>
    try {
    document.getElementById("@Model.Method").selected = true;
    } catch { }
    document.getElementById("editor").addEventListener('input', function () {
        document.getElementById("Save").removeAttribute("disabled");
    });
    </script>
</div>