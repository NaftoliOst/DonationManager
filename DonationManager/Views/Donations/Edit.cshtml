@model DonationManager.Models.Donation

@{
    ViewBag.Title = "Edit";
}
<div class="card shadow">
    <div class="card-header"><h2>Edit Donation</h2></div>

    <div class="card-body">
        @using (Html.BeginForm("Edit", "donations", Model.ID, FormMethod.Post, htmlAttributes: new { id = "editor" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(Model => Model.CharityID)
            <div class="row">
                <div class="col-auto">
                    <div class="row">
                        <div class="col-auto">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CharityID, "To", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("CharityID", null, htmlAttributes: new { @class = "form-control", disabled = true })
                                @Html.ValidationMessageFor(model => model.CharityID, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">£</span>
                                    </div>
                                    <input type="text" required onchange="updateAmount()" name="Amount" id="Amount" class="form-control" value="@Model.Amount"
                                           onkeypress="return (event.charCode !=8 && event.charCode ==0 || ( event.charCode == 46 || (event.charCode >= 48 && event.charCode <= 57)))" />
                                </div>
                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-auto">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                                <input class="form-control text-box single-line input-validation-error" value="@Model.Date.ToString("yyyy-MM-dd")"
                                       data-val="true" data-val-date="The field Date must be a date." data-val-required="The Date field is required."
                                       id="Date" name="Date" type="date" aria-describedby="Date-error" aria-invalid="true">
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Method, htmlAttributes: new { @class = "control-label" })
                                <select name="Method" id="Method" class="form-control" required>
                                    <option hidden disabled value=null> -- Please Select --</option>
                                    <option id="Card" value="Card">Card</option>
                                    <option id="Bank Transfer" value="Bank Transfer">Bank Transfer</option>
                                    <option id="Charity Voucher" value="Charity Voucher">Charity Voucher</option>
                                    <option id="Charity Transfer" value="Charity Transfer">Charity Transfer</option>
                                    <option id="Cheque" value="Cheque">Cheque</option>
                                    <option id="Cash" value="Cash">Cash</option>
                                    <option id="Other" value="Other">Other</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.Method, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col">
                            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label" })
                            <textarea name="Note" id="Note" class="form-control" rows="3" placeholder="Any notes to your future self about this donation...">@Model.Note</textarea>
                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="form-group btn-toolbar justify-content-between">
                    <div>
                        <button type="button" onclick="window.history.back()" class="btn btn-secondary">Discard Changes</button>
                        <input type="submit" id="Save" value="Save Changes" class="btn btn-primary" disabled />
                    </div>
                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#staticBackdrop">
                        Delete Charity
                    </button>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Delete Donation?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this donation?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                @using (Html.BeginForm("Delete", "donations", new { id = Model.ID }))
                {@Html.AntiForgeryToken()
                <input type="submit" value="Delete" class="btn btn-danger" />
            }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    try {
    document.getElementById("@Model.Method").selected = true;
    } catch { }
    document.getElementById("editor").addEventListener('input', function () {
        document.getElementById("Save").removeAttribute("disabled");
    });
</script>